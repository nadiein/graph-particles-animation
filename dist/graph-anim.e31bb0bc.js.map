{"version":3,"sources":["utils.js","particle.js","graph.js","builder.js","index.js"],"names":["Entity","id","CoordinatesVo","x","y","Config","coords","width","height","color","Particle","config","GraphNode","childrens","Builder","node","canvas","ctx","getStage","setAttribute","fillStyle","fillRect","appendChild","builder","document","createElement","getContext","canvasX","canvasY","canvasW","window","innerWidth","canvasH","innerHeight","getCanvasBgColorByDayTime","isDarkOutside","isDark","date","Date","hours","getHours","midTwilightTime","luxMaxValue","lux","getAmbientSensorValue","sensor","AmbientLightSensor","console","log","onreading","illuminance","onerror","event","warn","error","name","message","start","canvasColor","app","querySelector","setConfig","drawStage","build"],"mappings":";;AIAA;;AACA;;;ADDA,ADAA,ADAA;AGGE,aAAY;ADFd,ACGI,IJJSA,EIIH2B,OAAO,AJHb,GIGgB,CAAhB,YJHY1B,EAAZ,EAAgB;AIIhB,AJJgB,MIIV2B,OAAO,GAAG,CAAhB;ADHJ,ACII,IFHiBhB,ADDAF,EGIXmB,OAAO,EHFb,CCCA,AECgBC,MAAM,CAACC,UAAvB,AHFY9B,ECCAA,ADDZ,ECCA,ADDgBU,ECCAA,IDDhB,ECCA,ADDwB,ECCAE,SAAxB,EAAmC;AAAA,AEEnC,AHHwB,ADFpB,MIKEmB,CJLG/B,EAAL,GAAUA,CIKD,CJLT,EIKY6B,MAAM,CAACG,WAAvB;AJJC;AEGG,AEGJ,AHJI,OCCKhC,ADDAA,ECCL,ADDA,EGIKiC,CFHKjC,ADDAA,ECCV,ADDA,sBGIJ,GAAqC;AFFjC,AEGA,AHJA,OCCKE,ADDAA,CCCL,AEGIM,AHJJ,GCCSE,ADDAA,EGIA,GAAG,CFHG,ADDA,CCCCL,ADDAA,IGIhB,EFHS,ADDA,CCCcH,ADDAA,CCCvB,ADDA;ACEA,AEIA,AHLA,OCCKC,ADDAA,CCCL,AEIK+B,AHLL,GCCSxB,ADDAA,MCCM,ADDA,CCCCL,ADDAA,GGKE,EAAlB,CFJS,ADDA,CCCcF,AEIAK,AHLAL,CCCvB,ADDA,IGK4B,GAAG,MAAR;AFHvB,AEIA,AHLA,IDFKF,GEGAK,ADDAA,IGKEE,CFJP,ADDA,GCCaE,ADDAA,CGKb,IJLJ,CECuB,ADDA,CCCCJ,ADDAA,KCCpB,ADDA,gBDAQJ,CAAZ,EAAeC,CAAf,EAAkB;AEEd,AEIH,AHLG,ADDc,OEETI,ADDAA,MCCL,ADDA,GCCcG,ADDAA,MCCM,ADDA,CCCCH,ADDAA,MCCrB,ADDA;ACEA,ADDH,OCCQK,SAAL,GAAiBA,SAAjB;AACH,AEID,AJPI,OAAKV,CAAL,GIOKgC,AJPIhC,CAAT,YIOJ,GAAyB;AACrB,AJPA,OAAKC,CIODgC,AJPJ,GAAShC,CAAT,EIOU,GAAG,KAAb;AAEA,AJRH,QIQSiC,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACA,QAAMC,KAAK,GAAGF,IAAI,CAACG,QAAL,EAAd;AACA,QAAMC,eAAe,GAAG,EAAxB;A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","file":"graph-anim.e31bb0bc.js","sourceRoot":"..","sourcesContent":["export class Entity {\n    constructor(id) {\n        this.id = id;\n    }\n}\n\nexport class CoordinatesVo {\n\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n}\n\nexport class Config {\n\n    constructor(coords, width, height, color) {\n        this.coords = coords;\n        this.width = width;\n        this.height = height;\n        this.color = color\n    }\n}","import { Entity, CoordinatesVo, Config } from './utils'\n\nexport default class Particle {\n\n    constructor(id, config) {\n        this.id = id;\n        this.x = config.coords.x;\n        this.y = config.coords.y;\n        this.width = config.width;\n        this.height = config.height;\n    }\n}","import { Entity, CoordinatesVo, Config } from './utils'\n\n\nexport default class GraphNode {\n\n    constructor(id, config, childrens) {\n        this.id = id;\n        this.x = config.coords.x;\n        this.y = config.coords.y;\n        this.width = config.width;\n        this.height = config.height;\n        this.childrens = childrens;\n    }\n}","import Particle from './particle';\nimport GraphNode from './graph';\nimport { Entity, CoordinatesVo, Config } from './utils'\n\n\nexport default class Builder {\n\n    constructor() {\n        this.node = null;\n        this.canvas = null;\n        this.ctx = null;\n        this.x = null;\n        this.y = null;\n        this.width = null;\n        this.height = null;\n        this.color = '';\n    }\n\n    static setConfig(config) {\n        const builder = new Builder();\n        builder.x = config.coords.x;\n        builder.y = config.coords.y;\n        builder.width = config.width;\n        builder.height = config.height;\n        builder.color = config.color;\n        return builder;\n    }\n\n    #initStage() {\n        this.canvas = document.createElement('canvas');\n        this.ctx = this.canvas.getContext('2d');\n        return this;\n    }\n    \n    getStage() {\n        return this.#initStage();\n    }\n\n    drawStage(node) {\n        // TODO: draw canvas stage\n        this.node = node;\n        return this;\n    }\n\n    drawGraph() {\n        // TODO: draw graph\n    }\n\n    createGraphNode() {\n        // TODO: create graph nodes\n    }\n\n    createParticle() {\n        // TODO: create particle here\n    }\n\n    initAnimation() {\n        // TODO: request animation frame here to init particles animations\n    }\n\n    build() {\n        this.getStage();\n\n        this.canvas.setAttribute('width', this.width);\n        this.canvas.setAttribute('height', this.height);\n        this.ctx.fillStyle = this.color;\n        this.ctx.fillRect(this.x, this.y, this.width, this.height);\n        this.node.appendChild(this.canvas);\n    }\n}\n","import Builder from './builder.js';\nimport { Entity, CoordinatesVo, Config } from './utils'\n\n;(function () {\n    const canvasX = 0;\n    const canvasY = 0;\n    const canvasW = window.innerWidth;\n    const canvasH = window.innerHeight;\n\n    function getCanvasBgColorByDayTime() {\n        let color = '#fff';\n\n        if ( isDarkOutside() ) color = '#999';\n        return color;\n    }\n\n    function isDarkOutside() {\n        let isDark = false;\n\n        const date = new Date();\n        const hours = date.getHours();\n        const midTwilightTime = 18;\n        const luxMaxValue = 999;\n        \n        let lux = getAmbientSensorValue();\n        \n        if ( lux && lux > luxMaxValue ||\n            hours > midTwilightTime ) {\n            isDark = true;\n        }\n\n        return isDark;\n    }\n\n    function getAmbientSensorValue() {\n        let lux = null;\n\n        if ( 'AmbientLightSensor' in window ) {\n            const sensor = new AmbientLightSensor();\n            console.log(sensor)\n            sensor.onreading = () => {\n                lux = sensor.illuminance;\n                console.log('Current light level:', sensor.illuminance);\n            };\n            sensor.onerror = (event) => {\n                console.warn(event.error.name, event.error.message);\n            };\n            sensor.start();\n        }\n\n        return lux;\n    }\n\n    const canvasColor = getCanvasBgColorByDayTime();\n\n    const coords = new CoordinatesVo(canvasX, canvasY);\n    const config = new Config(coords, canvasW, canvasH, canvasColor);\n\n    const app = document.querySelector('.app');\n\n    Builder.setConfig(config).drawStage(app).build();\n\n}());\n "]}